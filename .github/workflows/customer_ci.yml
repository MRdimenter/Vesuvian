name: Customer CI

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        working-directory: ./    # set working directory to project root
        run: mvn -B package --file pom.xml

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: server/customer
          dockerfile: Dockerfile
          push: true
          tags: ghcr.io/mrdimenter/customer:latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Deploy to remote
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          docker pull ghcr.io/mrdimenter/customer:latest

          # Check if the container is running
          echo "Checking if the container 'customer' exists..."

          echo "Container 'customer' is running. It will be stopped and removed..."
          docker rm customer --force
          
           # Check if the docker compose is running
          echo "Checking if the docker compose for 'customer' exists..."

          echo "Docker compose for 'customer' is running. It will be stopped and removed..."
          cd /home/vesuvian
          docker compose up -d --no-deps --force-recreate customer
          "

